#include "pch.h"
#include "RenderDomEl.h"
#include "RenderStack.h"

namespace xo {

RenderDomEl::RenderDomEl(InternalID id, Tag tag) : InternalID(id), Tag(tag) {
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

RenderDomNode::RenderDomNode(InternalID id, Tag tag, Pool* pool) : RenderDomEl(id, tag) {
	SetPool(pool);
}

void RenderDomNode::Discard() {
	InternalID = 0;
	Children.clear();
}

void RenderDomNode::SetStyle(RenderStack& stack) {
	Style.BackgroundImageID = stack.Get(CatBackgroundImage).GetStringID();
	Style.BackgroundColor   = stack.Get(CatBackground).GetColor();
	Style.BorderColor       = stack.Get(CatBorderColor_Left).GetColor();
	Style.HasHoverStyle     = stack.HasHoverStyle();
	Style.HasFocusStyle     = stack.HasFocusStyle();
}

void RenderDomNode::SetPool(Pool* pool) {
	Children.Pool = pool;
}

Box RenderDomNode::BorderBox() const {
	Box box = Pos;
	box.Left -= Style.Padding.Left + Style.BorderSize.Left;
	box.Top -= Style.Padding.Top + Style.BorderSize.Top;
	box.Right += Style.Padding.Right + Style.BorderSize.Right;
	box.Bottom += Style.Padding.Bottom + Style.BorderSize.Bottom;
	return box;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

RenderDomText::RenderDomText(InternalID id, Pool* pool) : RenderDomEl(id, TagText) {
	Text.Pool  = pool;
	FontID     = FontIDNull;
	FontSizePx = 0;
	Flags      = 0;
}

void RenderDomText::SetStyle(RenderStack& stack) {
	Color = stack.Get(CatColor).GetColor();
}
}
